{{- if .Values.minio.enabled }}
# This pod creates the state-storage bucket in the minio server,
# which the local cloud deployment requires to store its state.
apiVersion: v1
kind: Pod
metadata:
  name: thehive-minio-create-bucket
  labels:
    {{ include "thehive.commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
spec:
  restartPolicy: OnFailure
  containers:
    - name: minio-mc
      image: "{{ .Values.minio.minioClient.image.registry }}/{{ .Values.minio.minioClient.image.repository }}:{{ .Values.minio.minioClient.image.tag }}"
      imagePullPolicy: {{ .Values.minio.minioClient.image.pullPolicy }}
      command: ["/bin/sh", "-c",
        "until (/usr/bin/mc config host add myminio $MINIO_ENDPOINT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY) do echo '...waiting...' && sleep 1; done;
          /usr/bin/mc mb --ignore-existing myminio/state-storage;
          /usr/bin/mc policy set public myminio/state-storage;
          /usr/bin/mc mb --ignore-existing myminio/thehive-dev-logs;
          /usr/bin/mc policy set public myminio/thehive-dev-logs;"]
      env:
        - name: MINIO_ACCESS_KEY
          value: {{ .Values.minio.auth.rootUser }}
        - name: MINIO_SECRET_KEY
          value: {{ .Values.minio.auth.rootPassword }}
        - name: MINIO_ENDPOINT
          value: {{ .Values.minio.endpoint }}
{{ end }}
