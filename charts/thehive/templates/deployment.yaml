apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thehive.fullname" . }}
  labels:
    {{- include "thehive.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "thehive.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "thehive.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "thehive.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{ if .Values.initContainers.enabled }}
      # See https://kubernetes.io/docs/concepts/workloads/pods/init-containers/#init-containers-in-use
      initContainers:
        - name: init-cassandra
          image: "{{ .Values.busybox.image.registry }}/{{ .Values.busybox.image.repository }}:{{ .Values.busybox.image.tag }}"
          imagePullPolicy: {{ .Values.busybox.image.pullPolicy }}
          command: ['sh', '-c', "until nslookup {{ index .Values.database.hostnames 0 }}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for cassandra; sleep 2; done"]
        - name: init-elastic
          image: "{{ .Values.busybox.image.registry }}/{{ .Values.busybox.image.repository }}:{{ .Values.busybox.image.tag }}"
          imagePullPolicy: {{ .Values.busybox.image.pullPolicy }}
          command: ['sh', '-c', "until wget --no-cache --no-check-certificate --spider http://{{ index .Values.index.hostnames 0 }}{{ if .Values.elasticsearch.enabled }}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local{{ end }}:{{ .Values.index.port }}/_cluster/health ; do echo waiting for elasticsearch; sleep 2; done"]
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/opt/thehive/entrypoint"
            {{ if .Values.database.wait -}}- "--no-cql-wait"{{- end }}
            {{ if not .Values.cortex.enabled -}}- "--no-config-cortex"{{- end }}
            - "--kubernetes"
            - "--kubernetes-pod-label-selector"
            - "app.kubernetes.io/name={{ include "thehive.name" . }}"
            - "--index-backend"
            - "elasticsearch"
            - "--cluster-min-nodes-count"
            - "{{ .Values.clusterMinNodesCount }}"
          {{- with .Values.extraCommand }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
            {{- end }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- if .Values.database.secretName }}
            - name: TH_CQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: cassandra-password
            {{- end }}
            {{- if .Values.index.secretName }}
            - name: TH_ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.index.secretName }}
                  key: elasticsearch-password
            {{- end }}
            {{- if .Values.storage.secretName }}
            - name: TH_S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storage.secretName }}
                  key: rootPassword
            {{- end }}
            {{- if .Values.secretName }}
            - name: TH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: thehive-secret
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "thehive.fullname" . }}-env
            {{- if or (not .Values.database.secretName) (not .Values.index.secretName) (not .Values.storage.secretName) (not .Values.secretName) }}
            - secretRef:
                name: {{ include "thehive.fullname" . }}-secrets
            {{- end }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.volumeMounts .Values.extraConfig }}
          volumeMounts:
          {{- if .Values.extraConfig }}
            - name: config
              mountPath: /etc/thehive
              readOnly: true
          {{- end -}}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
      {{- if or .Values.volumes .Values.extraConfig }}
      volumes:
      {{- if .Values.extraConfig }}
        - name: config
          configMap:
            name: {{ include "thehive.fullname" . }}-config
      {{- end -}}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
