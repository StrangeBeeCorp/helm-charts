################################
# TheHive Helm Chart variables #
################################

nameOverride: ""
fullnameOverride: ""

imagePullSecrets: []
#  - name: "image-pull-secret"

thehive:
  # TheHive container image
  image:
    registry: docker.io
    repository: strangebee/thehive
    # Defaults to the chart appVersion if not set
    tag: ""
    pullPolicy: IfNotPresent

  replicaCount: 2

  # TheHive nodes count
  clusterMinNodesCount: 1

  # PodDisruptionBudget configuration
  maxUnavailable: 1

  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    #targetMemoryUtilizationPercentage: 95

  resources:
    requests:
      cpu: "1000m"
      memory: "2048Mi"
      ephemeral-storage: "4Gi"
    limits:
      cpu: "3000m"
      memory: "3584Mi"
      ephemeral-storage: "4Gi"

  jvmOpts: "-Xms2g -Xmx2g -Xmn300m"

  # TheHive Cassandra configuration
  database:
    # Credentials to connect to Cassandra
    # They should match the credentials for Cassandra subchart below (if enabled)
    username: "cassandra"
    password: "ChangeThisPasswordForCassandra"
    # The name of an existing k8s secret containing Cassandra password
    k8sSecretName: ""
    k8sSecretKey: "cassandra-password"
    # List of Cassandra hostnames
    # Auto set to Cassandra subchart service if enabled and this list is empty: "{{ .Release.Name }}-cassandra"
    hostnames: []
      #- "mycassandra.example.com"
    # Set to true for TheHive to wait 30 seconds before starting the app
    wait: false

  # TheHive ElasticSearch configuration
  index:
    # Credentials to connect to ElasticSearch
    # They should match the credentials for ElasticSearch subchart below (if enabled)
    username: "elastic"
    password: ""
    # The name of an existing k8s secret containing ElasticSearch password
    k8sSecretName: ""
    k8sSecretKey: "elasticsearch-password"
    # List of ElasticSearch hostnames
    # Auto set to ElasticSearch subchart service if enabled and this list is empty: "{{ .Release.Name }}-elasticsearch"
    hostnames: []
      #- "myelasticsearch.example.com"

  # TheHive object storage configuration
  storage:
    # Credentials to connect to the object storage
    # They should match the credentials for MinIO subchart below (if enabled)
    accessKey: "minio"
    secretKey: "ChangeThisPasswordForMinIO"
    # The name of an existing k8s secret containing the object storage secret key
    k8sSecretName: ""
    k8sSecretKey: "rootPassword"
    # Bucket information
    # Auto set to MinIO subchart service if enabled and this string is empty: "http://{{ .Release.Name }}-minio:9000"
    endpoint: ""
    bucket: "thehive"
    region: "us-east-1"
    usePathAccessStyle: true

  # TheHive Deployment initContainers configuration
  initContainers:
    image:
      registry: docker.io
      repository: busybox
      tag: "1.37.0-glibc"
      pullPolicy: IfNotPresent

    # Wait for Cassandra to be reachable on port 9042
    checkCassandra:
      enabled: true

    # Wait for ElasticSearch "/_cluster/health" route on port 9200 to answer
    checkElasticsearch:
      enabled: true

  # TheHive HTTP secret
  httpSecret: ""
  # The name of an existing k8s secret containing the HTTP secret used by TheHive
  k8sSecretName: ""
  k8sSecretKey: "http-secret"

  # Cortex configuration
  # You can also add Cortex servers directly from TheHive UI https://docs.strangebee.com/thehive/administration/cortex/
  cortex:
    enabled: false
    # Cortex protocol (expected values are "http" or "https")
    protocol: "http"
    # List of Cortex hostnames to configure
    hostnames: []
      #- "mycortex.example.com"
    port: 9001
    # Cortex API keys
    # Each API key will be mapped to a single Cortex hostname (following the order in this YAML)
    api_keys: []
      #- "abcdefghijklmnopqrstuvwxyz012345"
    # Alternatively, the name of an existing k8s secret containing all API keys for TheHive to connect to Cortex servers
    # Expected format: "<key>,<key>,..."
    k8sSecretName: ""
    k8sSecretKey: "api-keys"

  # Custom application.conf file for TheHive
  applicationConf: ""
  #applicationConf: |
  #  # TheHive configuration file
  #  # See https://docs.strangebee.com/thehive/overview/ under the "Configuration" section

  # Extra entrypoint arguments
  extraCommand: []

  # Extra environment variables
  extraEnv: []
    #- name: "EXAMPLE"
    #  value: "example"
    #- name: "FROM_CM"
    #  valueFrom:
    #    configMapKeyRef:
    #      name: "cm-name"
    #      key: "key-name"
    #- name: "FROM_SECRET"
    #  valueFrom:
    #    secretKeyRef:
    #      name: "cm-name"
    #      key: "key-name"

  # Startup probe (set "failureThreshold" to a high value to prevent CrashLoops during schema migrations)
  startupProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 36

  # Liveness probe
  livenessProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  # Readiness probe
  readinessProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  serviceAccount:
    create: true
    name: ""
    annotations: {}
    # Whether to automatically mount Kubernetes API credentials
    automount: true

  podAnnotations: {}
  podLabels: {}

  # Pod wide security context https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  podSecurityContext: {}
    #fsGroup: 2000

  # Container wide security context
  securityContext: {}
    #allowPrivilegeEscalation: false

  service:
    type: ClusterIP
    port: 9000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      #kubernetes.io/ingress.class: nginx
      #kubernetes.io/tls-acme: "true"
    hosts:
      - host: thehive.example
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
      #- secretName: thehive-tls
      #  hosts:
      #    - thehive.example

  # Additional volumes for TheHive Deployment
  volumes: []
    #- name: foo
    #  secret:
    #    secretName: mysecret
    #    optional: false

  # Additional volumeMounts for TheHive Deployment
  volumeMounts: []
    #- name: foo
    #  mountPath: "/etc/foo"
    #  readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

################################
# Cassandra subchart variables #
################################

# https://github.com/bitnami/charts/blob/cassandra/12.2.2/bitnami/cassandra/values.yaml
cassandra:
  # Use Cassandra dependency Helm Chart
  enabled: true

  image:
    registry: docker.io
    repository: bitnami/cassandra
    tag: "4.1.7-debian-12-r3"

  dbUser:
    user: "cassandra"
    password: "ChangeThisPasswordForCassandra"
    forcePassword: false
    # The name of an existing k8s secret (Cassandra subchart expects a ".data.cassandra-password" key)
    existingSecret: ""

  cluster:
    name: "TheHive"
    datacenter: "DC1-TheHive"
    rack: "Rack1-TheHive"

  replicaCount: 2

  pdb:
    create: true
    maxUnavailable: "1"

  # Resources available for each replica
  resources:
    requests:
      cpu: "1000m"
      memory: "2048Mi"
      ephemeral-storage: "4Gi"
    limits:
      cpu: "2000m"
      memory: "3584Mi"
      ephemeral-storage: "4Gi"

  jvm:
    extraOpts: "-Xms2g -Xmx2g -Xmn200m"
    maxHeapSize: "2g"
    newHeapSize: "200m"

  persistence:
    enabled: true
    storageClass: ""
    size: "10Gi"

  networkPolicy:
    enabled: false

  extraEnvVars:
    # Can be set to "AllowAllAuthenticator" to allow passwordless authentication
    - name: CASSANDRA_AUTHENTICATOR
      value: PasswordAuthenticator
    # Can be set to "AllowAllAuthorizer" to allow passwordless authentication
    - name: CASSANDRA_AUTHORIZER
      value: CassandraAuthorizer

####################################
# ElasticSearch subchart variables #
####################################

# https://github.com/bitnami/charts/blob/elasticsearch/21.4.9/bitnami/elasticsearch/values.yaml
elasticsearch:
  # Use ElasticSearch dependency Helm Chart
  enabled: true

  image:
    registry: docker.io
    repository: bitnami/elasticsearch
    tag: "8.17.4-debian-12-r0"

  # Automatically filled by values under the "index" key defined above
  security:
    tls: {}
    # TLS configuration is required to enable password authentication
    enabled: false
    elasticPassword: ""
    # The name of an existing k8s secret (ElasticSearch subchart expects a ".data.elasticsearch-password" key)
    existingSecret: ""

  master:
    # Whether nodes are master only or multipurpose (master, data, coordinating and ingest)
    masterOnly: false

    # Number of master-elegible replicas to deploy
    replicaCount: 2
    pdb:
      create: true
      maxUnavailable: "1"

    # Resources available for each replica
    resources:
      requests:
        cpu: "1000m"
        memory: "2048Mi"
        ephemeral-storage: "4Gi"
      limits:
        cpu: "2000m"
        memory: "3584Mi"
        ephemeral-storage: "4Gi"

    # Master nodes heap size
    heapSize: "2g"
    # Configure JVM options as env variable
    extraEnvVars:
      - name: JVM_OPTS
        value: "-Xms2g -Xmx2g -Xmn200m"

    persistence:
      enabled: true
      storageClass: ""
      size: "10Gi"

    networkPolicy:
      enabled: false

  data:
    # Disable data-dedicated nodes
    replicaCount: 0

  coordinating:
    # Disable coordination-dedicated nodes
    replicaCount: 0

  ingest:
    # Disable ingestion-dedicated nodes
    replicaCount: 0

############################
# MinIO subchart variables #
############################

# https://github.com/minio/minio/blob/master/helm/minio/values.yaml
minio:
  # Use MinIO dependency Helm Chart
  # You should disable it if you plan to use another s3-compatible object storage for TheHive
  enabled: true

  image:
    repository: quay.io/minio/minio
    tag: RELEASE.2024-12-18T13-15-44Z

  mcImage:
    repository: quay.io/minio/mc
    tag: RELEASE.2024-11-21T17-21-54Z

  rootUser: "minio"
  rootPassword: "ChangeThisPasswordForMinIO"
  # The name of an existing k8s secret (MinIO subchart expects ".data.rootUser" and ".data.rootPassword" keys)
  existingSecret: ""

  # Set to "distributed" with multiple replicas in production
  mode: standalone
  # Number of drives attached to a node
  drivesPerNode: 1
  # Number of MinIO pods running
  replicas: 1
  # Number of expanded MinIO clusters
  pools: 1

  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1

  buckets:
    - name: thehive
      policy: none
      purge: false
      versioning: false
      objectlocking: false

  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
      ephemeral-storage: "4Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
      ephemeral-storage: "4Gi"

  persistence:
    enabled: true
    storageClass: ""
    size: "10Gi"
