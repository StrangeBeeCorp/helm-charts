apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}
  replicas: {{ .Values.minio.statefulset.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.minio.statefulset.terminationGracePeriodSeconds }}
      containers:
        - name: minio
          image: {{ .Values.minio.statefulset.containers.image }}
          command: ["minio", "server", "/data", "--console-address", ":9001"]
          env:
            - name: {{ .Values.Secrets.keyUser }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Secrets.name }}
                  key: {{ .Values.Secrets.keyUser }}
            
            - name: {{ .Values.Secrets.keyPassword }}
              valueFrom:
                secretKeyRef:
                    name: {{ .Values.Secrets.name }}
                    key: {{ .Values.Secrets.keyPassword }}
          ports:
            - containerPort: {{ .Values.minio.statefulset.containers.ports.consoleContainerPort }}
              name: {{ .Values.minio.statefulset.containers.ports.consoleName }}
          resources:
            limits:
              cpu: {{ .Values.minio.statefulset.containers.resources.limits.cpu }}
              memory: {{ .Values.minio.statefulset.containers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.minio.statefulset.containers.resources.requests.cpu }}
              memory: {{ .Values.minio.statefulset.containers.resources.requests.memory }}
          volumeMounts:
            - name: s3-data
              mountPath: /data
      volumes:
        - name: s3-data
          persistentVolumeClaim:
            claimName: {{ .Values.MinioPersistentVolumeClaim.name }}
