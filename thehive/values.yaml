# Default values for thehive.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: strangebee/thehive
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

backup:
  enabled: true
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  volume:
    storageClass: "standard"
    size: 2Gi
    volumeMode: Filesystem
    reclaimPolicy: Retain
    volumeType: 
      local:
        path: /data/backup
    nodeAffinity:  
      required:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - thehive-control-plane


cassandra:
  enabled: true
  version: "4.1"
  clusterName: "TheHive"
  dcName: "DC1-TheHive"
  rackName: "Rack1-TheHive"
  resources: 
    limits:
      cpu: "1000m"
      memory: 1600Mi
    requests:
      cpu: "500m"
      memory: 1600Mi
  maxHeapSize: "1024M"
  heapNewSize: "1024M"
  persistence:
    enabled: true
    claimName: "cassandra-pvc"
    volumeName: "cassandra-pv"
    storageClass: "standard"
    size: 2Gi
    volumeMode: Filesystem
    reclaimPolicy: Retain
    volumeType: 
      local:
        path: /data/cassandra
    # NodeAffinity is required for local storage
    nodeAffinity:  
      required:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - thehive-control-plane
  
elasticsearch:
  enabled: true
  replicas: 2
  minimumMasterNodes: 1
  createCert: false
  secret:
    enabled: false # WARNING: In production you should enable this
  esConfig:
    elasticsearch.yml: |
      xpack.security.enabled: false
      xpack.security.transport.ssl.enabled: false
      xpack.security.http.ssl.enabled: false
  # Permit co-located instances for solitary minikube virtual machines.
  antiAffinity: "soft"

  # Shrink default JVM heap.
  esJavaOpts: "-Xmx128m -Xms128m"

  # Allocate smaller chunks of memory per pod.
  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "1000m"
      memory: "512M"

  # Request smaller persistent volumes.
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: "standard"
    resources:
      requests:
        storage: 500M



minio:
  enabled: true
  endpoint: http://thehive-minio:9000

  image:
    repository: minio/minio
    tag: RELEASE.2024-01-18T22-51-28Z

  auth:
    rootUser: minio
    rootPassword: minio123
  storage:
    volumeClaimValue: 2Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

thehive:
  initContainers:
    enabled: true
  maxUnavailable: 1
  secret: "SuperSecretForKubernetes"
  clusterMinNodesCount: 0
  cortex: 
    enabled: false
    hostnames:
      - "thehive-cortex"
    keys: ""
  cql:
    hostnames:
      - "thehive-cassandra"
    wait: true
  indexBackend:
    type: elasticsearch
    hostnames: 
      - "elasticsearch-master"
  s3:
    endpoint: "http://thehive-minio:9000"
    accessKey: "minio"
    secretKey: "minio123"
    usePathAccessStyle: true
  extraConfig: ""
  #extraConfig: |-
  #  # TheHive configuration file
  extraCommand: []
  extraEnv: []
  #- name: "EXAMPLE"
  #  value: "example"
  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true
  



serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Attach pod reader role to service account
  podReader:
    attach: true
    serviceAccountName: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
