###############################
# Cortex Helm Chart variables #
###############################

nameOverride: ""
fullnameOverride: ""

imagePullSecrets: []
#  - name: "image-pull-secret"

cortex:
  # Additional labels and annotations to attach to Cortex resources
  # (dedicated keys exist for Ingress and ServiceAccount annotations)
  labels: {}
  annotations: {}

  # Additional labels and annotations to attach to Cortex pods
  podLabels: {}
  podAnnotations: {}

  replicas: 2

  # Cortex Deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  resources:
    requests:
      cpu: "1000m"
      memory: "2048Mi"
      ephemeral-storage: "4Gi"
    limits:
      cpu: "3000m"
      memory: "3584Mi"
      ephemeral-storage: "4Gi"

  jvmOpts: "-Xms2g -Xmx2g -Xmn300m"

  # Cortex container image
  image:
    registry: docker.io
    repository: thehiveproject/cortex
    # Defaults to the chart appVersion if not set
    tag: ""
    pullPolicy: IfNotPresent

  # Cortex ElasticSearch configuration
  index:
    # Credentials to connect to ElasticSearch
    # They should match the credentials for ElasticSearch subchart below (if enabled)
    username: "elastic"
    password: ""
    # The name of an existing k8s secret containing ElasticSearch password
    k8sSecretName: ""
    k8sSecretKey: "elasticsearch-password"
    # List of ElasticSearch hostnames
    # Auto set to ElasticSearch subchart service if enabled and this list is empty: "{{ .Release.Name }}-elasticsearch"
    hostnames: []
      #- "myelasticsearch.example.com"

  # The directory in Cortex container used to communicate with running jobs (write inputs and read outputs)
  jobDirectory: "/tmp/cortex-jobs"

  # Cortex HTTP secret
  httpSecret: ""
  # The name of an existing k8s secret containing the HTTP secret used by Cortex
  k8sSecretName: ""
  k8sSecretKey: "http-secret"

  # A persistentVolume with "ReadWriteMany" accessMode is MANDATORY for cortex to work
  # It will be used by cortex to share data with pods running cortex jobs
  persistentVolumeClaim:
    # Whether to create a PVC or use an existing one
    create: true
    # The name of the PVC to create/use (if create is set to true, the name can be automatically generated)
    name: ""
    # Information for the PVC (only used if create is set to true)
    # - If defined, storageClassName: <storageClass>
    # - If set to "-", storageClassName: "" (disables dynamic provisioning)
    # - If set to "", no storageClassName spec is set (use the default provisioner of your cluster)
    storageClass: ""
    size: 10Gi

  # Extra entrypoint arguments
  extraCommand: []

  # Extra environment variables
  extraEnv: []
    #- name: "EXAMPLE"
    #  value: "example"
    #- name: "FROM_CM"
    #  valueFrom:
    #    configMapKeyRef:
    #      name: "cm-name"
    #      key: "key-name"
    #- name: "FROM_SECRET"
    #  valueFrom:
    #    secretKeyRef:
    #      name: "cm-name"
    #      key: "key-name"

  # Custom application.conf file for Cortex
  #configFile: ""
  configFile: |
    # Cortex configuration file
    # See https://docs.strangebee.com/cortex/installation-and-configuration/#configuration-guides
    analyzer {
      urls: [
        "https://download.thehive-project.org/analyzers.json",
      ]

      # Customize analyzers parallelism here
      fork-join-executor {
        parallelism-min: 8,
        parallelism-factor: 1.0,
        parallelism-max: 8,
      }
    }

      # Customize responders parallelism here
    responder {
      urls: [
        "https://download.thehive-project.org/responders.json",
      ]

      fork-join-executor {
        parallelism-min: 8,
        parallelism-factor: 1.0,
        parallelism-max: 8,
      }
    }

  # Custom logback.xml file for Cortex
  logbackXml: ""
  #logbackXml: |
  #  <!-- Cortex logs configuration file -->
  #  <!-- See https://docs.strangebee.com/cortex/installation-and-configuration/#configuration-guides -->

  # Startup probe (set "failureThreshold" to a high value to prevent CrashLoops during schema migrations)
  startupProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 36

  # Liveness probe
  livenessProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  # Readiness probe
  readinessProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  serviceAccount:
    create: true
    name: ""
    annotations: {}
    # Whether to automatically mount Kubernetes API credentials
    automountServiceAccountToken: true

  # Cortex Deployment initContainers configuration
  initContainers:
    image:
      registry: docker.io
      repository: busybox
      tag: "1.37.0-glibc"
      pullPolicy: IfNotPresent

    # Wait for ElasticSearch "/_cluster/health" route on port 9200 to answer
    checkElasticsearch:
      enabled: true

  # Pod wide security context https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  podSecurityContext: {}
    #fsGroup: 2000

  # Container wide security context
  securityContext: {}
    #allowPrivilegeEscalation: false

  service:
    type: ClusterIP
    port: 9001

  ingress:
    enabled: false
    className: ""
    annotations: {}
      #kubernetes.io/ingress.class: nginx
      #kubernetes.io/tls-acme: "true"
    hosts:
      - host: cortex.example
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
      #- secretName: cortex-tls
      #  hosts:
      #    - cortex.example

  # Additional volumes for Cortex Deployment
  volumes: []
    #- name: foo
    #  secret:
    #    secretName: mysecret
    #    optional: false

  # Additional volumeMounts for Cortex Deployment
  volumeMounts: []
    #- name: foo
    #  mountPath: "/etc/foo"
    #  readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

####################################
# ElasticSearch subchart variables #
####################################

# https://github.com/bitnami/charts/blob/elasticsearch/21.4.7/bitnami/elasticsearch/values.yaml
elasticsearch:
  # Use ElasticSearch dependency Helm Chart
  enabled: true

  # Cortex only supports ElasticSearch v7 at the time of writing
  image:
    registry: docker.io
    repository: bitnamilegacy/elasticsearch
    tag: "7.17.26-debian-12-r0"

  # Automatically filled by values under the "index" key defined above
  security:
    tls: {}
    # TLS configuration is required to enable password authentication
    enabled: false
    elasticPassword: ""
    # The name of an existing k8s secret (ElasticSearch subchart expects a ".data.elasticsearch-password" key)
    existingSecret: ""

  master:
    # Whether nodes are master only or multipurpose (master, data, coordinating and ingest)
    masterOnly: false

    # Number of master-elegible replicas to deploy
    replicaCount: 2
    pdb:
      create: true
      maxUnavailable: "1"

    # Resources available for each replica
    resources:
      requests:
        cpu: "1000m"
        memory: "2048Mi"
        ephemeral-storage: "4Gi"
      limits:
        cpu: "2000m"
        memory: "3584Mi"
        ephemeral-storage: "4Gi"

    # Master nodes heap size
    heapSize: "2g"
    # Configure JVM options as env variable
    extraEnvVars:
      - name: JVM_OPTS
        value: "-Xms2g -Xmx2g -Xmn200m"

    persistence:
      enabled: true
      storageClass: ""
      size: "10Gi"

    networkPolicy:
      enabled: false

  data:
    # Disable data-dedicated nodes
    replicaCount: 0

  coordinating:
    # Disable coordination-dedicated nodes
    replicaCount: 0

  ingest:
    # Disable ingestion-dedicated nodes
    replicaCount: 0
