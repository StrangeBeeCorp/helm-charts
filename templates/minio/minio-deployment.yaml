apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: {{ .Release.Namespace }}
  labels:
    app: minio
spec:
  serviceName: minio
  replicas: {{ .Values.minio.statefulset.replicas }}
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      terminationGracePeriodSeconds: {{ .Values.minio.statefulset.terminationGracePeriodSeconds }}
      containers:
        - name: minio
          image: {{ .Values.minio.statefulset.containers.image }}
          command: ["minio", "server", "/data", "--console-address", ":9001"]
          env:
            - name: MINIO_ROOT_USER
              value: minioadmin
            - name: MINIO_ROOT_PASSWORD
              value: minioadmin
          ports:
            - containerPort: {{ .Values.minio.statefulset.containers.ports.apiContainerPort }}
              name: {{ .Values.minio.statefulset.containers.ports.apiName }}
            - containerPort: {{ .Values.minio.statefulset.containers.ports.consoleContainerPort }}
              name: {{ .Values.minio.statefulset.containers.ports.consoleName }}
          resources:
            limits:
              cpu: {{ .Values.minio.statefulset.containers.resources.limits.cpu }}
              memory: {{ .Values.minio.statefulset.containers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.minio.statefulset.containers.resources.requests.cpu }}
              memory: {{ .Values.minio.statefulset.containers.resources.requests.memory }}
          volumeMounts:
            - name: s3-data
              mountPath: /data
      volumes:
        - name: s3-data
          emptyDir: {}
